#!/bin/bash
fun_bar() {
	comando[0]="$1"
	comando[1]="$2"
	(
		[[ -e $HOME/fim ]] && rm $HOME/fim
		${comando[0]} -y >/dev/null 2>&1
		${comando[1]} -y >/dev/null 2>&1
		touch $HOME/fim
	) >/dev/null 2>&1 &
	tput civis
	echo -ne "         \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
	while true; do
		for ((i = 0; i < 18; i++)); do
			echo -ne "\033[1;31m#"
			sleep 0.1s
		done
		[[ -e $HOME/fim ]] && rm $HOME/fim && break
		echo -e "\033[1;33m]"
		sleep 1s
		tput cuu1
		tput dl1
		echo -ne "         \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
	done
	echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
	tput cnorm
}
IP=$(cat /etc/IP)
x="ok"
menu ()
{
velocity () {
aguarde () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -d /etc/SSHPlus ]] && rm -rf /bin/menu
${comando[0]} > /dev/null 2>&1
${comando[1]} > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "         \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "         \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
fun_tst () {
speedtest -f csv > speed
}
echo ""
aguarde 'fun_tst'
clear
echo -e "\E[44;1;37m                🚀 SPEEDTEST 🚀                  \E[0m"
echo -e "\033[0;36m╔═════════════════════•⊱✦⊰•═════════════════════╗\033[0m"
png=$(cat speed | sed -n '3 p' |awk -F : {'print $NF'})
down=$(cat speed | sed -n '6 p' |awk -F :  {'print $NF'})
upl=$(cat speed | sed -n '8 p' |awk -F :  {'print $NF'})
lnk=$(cat speed | sed -n '10 p' |awk {'print $NF'})
echo -e "\033[1;32m   PING:\033[1;33m$png"
echo -e "\033[1;32m   DOWNLOAD:\033[1;33m$down"
echo -e "\033[1;32m   UPLOAD:\033[1;33m$upl"
echo -e "\033[0;36m╚═════════════════════•⊱✦⊰•═════════════════════╝\033[0m"
rm -rf $HOME/speed
}
#limiter
function limit1 () {
   clear
   echo -e "\n\033[1;32mINICIANDO O LIMITER... \033[0m"
   echo ""
   fun_bar 'screen -dmS limiter limiter' 'sleep 3'
   [[ $(grep -wc "limiter" /etc/autostart) = '0' ]] && {
       echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   } || {
       sed -i '/limiter/d' /etc/autostart
	   echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   }
   echo -e "\n\033[1;32m  LIMITER ATIVO !\033[0m"
   sleep 3
   menu
}
function limit2 () {
   clear
   echo -e "\033[1;32mPARANDO O LIMITER... \033[0m"
   echo ""
   fun_stplimiter () {
      sleep 1
      screen -r -S "limiter" -X quit
      screen -wipe 1>/dev/null 2>/dev/null
      [[ $(grep -wc "limiter" /etc/autostart) != '0' ]] && {
          sed -i '/limiter/d' /etc/autostart
      }
      sleep 1
   }
   fun_bar 'fun_stplimiter' 'sleep 3'
   echo -e "\n\033[1;31m LIMITER PARADO !\033[0m"
   sleep 3
   menu
}
fun_checkuser () {
	rm -rf /usr/bin/checkers && curl -s -L -o /usr/bin/checkers https://github.com/xzlordzx/sshpro/raw/main/checkers && chmod +x /usr/bin/checkers
	}
fun_atualizar () {
	rm -rf /usr/bin/attscript && curl -s -L -o /usr/bin/attscript https://github.com/xzlordzx/sshpro/raw/main/attscript && chmod +x /usr/bin/attscript
	}
fun_proxypro () {
	rm -rf /usr/bin/proxypro && curl -s -L -o /usr/bin/proxypro https://github.com/xzlordzx/sshpro/raw/main/proxypro && chmod +x /usr/bin/proxypro
	}
fun_fixspeed () {
    bash <(curl -sL https://script.cvpn.top/fixspeed.sh)
}
function limit_ssh () {
[[ $(ps x | grep "limiter"|grep -v grep |wc -l) = '0' ]] && limit1 || limit2
}
#onlineapp
function onapp1 () {
   clear
   echo -e "\n\033[1;32mINICIANDO O ONLINE APP... \033[0m"
   echo ""
   apt install apache2 -y > /dev/null 2>&1
   sed -i "s/Listen 80/Listen 8888/g" /etc/apache2/ports.conf >/dev/null 2>&1
   service apache2 restart
   rm -rf /var/www/html/server >/dev/null 2>&1
   mkdir /var/www/html/server >/dev/null 2>&1
   fun_bar 'screen -dmS onlineapp onlineapp' 'sleep 3'
   [[ $(grep -wc "onlineapp" /etc/autostart) = '0' ]] && {
       echo -e "ps x | grep 'onlineapp' | grep -v 'grep' && echo 'ON' || screen -dmS onlineapp onlineapp" >> /etc/autostart
   } || {
       sed -i '/onlineapp/d' /etc/autostart
	   echo -e "ps x | grep 'onlineapp' | grep -v 'grep' && echo 'ON' || screen -dmS onlineapp onlineapp" >> /etc/autostart
   }
   IP=$(wget -qO- ipv4.icanhazip.com) >/dev/null 2>&1
   echo -e "\n\033[1;32m  ONLINE APP ATIVO !\033[0m"
   echo -e "\033[1;31m \033[1;33mURL de Usuários Online para usar no App\033[0m"
   echo -e " http://$IP:8888/server/online"
   sleep 10
   menu
}
function onapp2 () {
   clear
   echo -e "\033[1;32mPARANDO O ONLINE APP... \033[0m"
   echo ""
   fun_stponlineapp () {
      sleep 1
      screen -r -S "onlineapp" -X quit
      screen -wipe 1>/dev/null 2>/dev/null
      [[ $(grep -wc "onlineapp" /etc/autostart) != '0' ]] && {
          sed -i '/onlineapp/d' /etc/autostart
      }
      sleep 1
   }
   fun_bar 'fun_stponlineapp' 'sleep 3'
   rm -rf /var/www/html/server >/dev/null 2>&1
   echo -e "\n\033[1;31m ONLINE APP PARADO !\033[0m"
   sleep 3
   menu
}
function onapp_ssh () {
[[ $(ps x | grep "onlineapp"|grep -v grep |wc -l) = '0' ]] && onapp1 || onapp2
}
##
function autoexec () {
   if grep "menu;" /etc/profile > /dev/null; then
      clear
      echo -e "\033[1;32mDESATIVANDO AUTO EXECUÇÃO\033[0m"
      offautmenu () {
         sed -i '/menu;/d' /etc/profile
      }
      echo ""
      fun_bar 'offautmenu'
      echo ""
      echo -e "\033[1;31mAUTO EXECUÇÃO DESATIVADO!\033[0m"
      sleep 1.5s
      menu2
   else
      clear
      echo -e "\033[1;32mATIVANDO AUTO EXECUÇÃO\033[0m"
      autmenu () {
         grep -v "^menu;" /etc/profile > /tmp/tmpass && mv /tmp/tmpass /etc/profile
         echo "menu;" >> /etc/profile
      }
      echo ""
      fun_bar 'autmenu'
      echo ""
      echo -e "\033[1;32mAUTO EXECUÇÃO ATIVADO!\033[0m"
      sleep 1.5s
      menu2
   fi

}
#menu2
menu2 (){
[[ -e /etc/Plus-torrent ]] && stsf=$(echo -e "\033[1;32m[ON] ") || stsf=$(echo -e "\033[1;31m[OFF] ")
stsbot=$(ps x | grep "bot_plus"|grep -v grep > /dev/null && echo -e "\033[1;32m[ON] " || echo -e "\033[1;31m[OFF] ")
stsbotteste=$(ps x | grep "bot_teste"|grep -v grep > /dev/null && echo -e "\033[1;32m[ON] " || echo -e "\033[1;31m[OFF] ")
stsbotrev=$(ps x | grep "bot_rev"|grep -v grep > /dev/null && echo -e "\033[1;32m[ON] " || echo -e "\033[1;31m[OFF] ")
autm=$(grep "menu;" /etc/profile > /dev/null && echo -e "\033[1;32m[ON] " || echo -e "\033[1;31m[OFF] ")
[[ ! -e /usr/lib/licence ]] && rm -rf /bin > /dev/null 2>&1
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/SSHPlus/Exp)" != "" ]] && _expuser=$(cat /etc/SSHPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-5s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-5s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-10s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(printf '%-5s' "$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)")
swap1=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $2'})")
swap2=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $4'})")
swap3=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $3'})")
clear
figlet "         SSH-PRO" | lolcat
echo -e "╔═════════════════════════•⊱✦⊰•═════════════════════════╗"  | lolcat
echo -e "\033[0;36m  \033[1;32mSISTEMA           \033[1;31m  \033[1;32mMEMÓRIA RAM      \033[1;31m \033[1;32m PROCESSADOR      \033[1;31m"
echo -e "\033[0;36m  \033[1;36mOS: \033[1;37m$_system    \033[1;31m  \033[1;36mTotal:\033[1;37m$_ram \033[1;31m  \033[1;36mNucleos: \033[1;37m$_core\033[0m   \033[1;31m"
echo -e "\033[0;36m  \033[1;36mHora: \033[1;37m$_hora    \033[1;31m  \033[1;36mEm uso: \033[1;37m$_usor \033[1;31m  \033[1;36mEm uso: \033[1;37m$_usop\033[0m    \033[1;31m"
[[ ! -e /tmp/att ]]  && {
    echo -e "\033[1;31m  \033[1;32mOnlines:\033[1;37m $_onlin    \033[1;31m  \033[1;32mExpirados: \033[1;37m$_userexp \033[1;31m  \033[1;32mTotal: \033[1;37m$_tuser\033[0m     \033[1;31m"
    var01='\033[1;37m•'
} || {
    echo -e ""
    var01="\033[1;32m!"
}
echo -e "\033[0;36m° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° °\033[0m"
echo -e "\033[0;31m   [\033[1;36m14\033[0;31m] \033[1;37m• \033[1;37mAUTO EXECUCAO $autm \033[0;31m 
\033[0;31m   [\033[1;36m15\033[0;31m] \033[1;37m• \033[1;37mBLOCK TORRENT $stsf \033[0;31m 
\033[0;31m   [\033[1;36m16\033[0;31m] \033[1;37m• \033[1;37mDESINSTALAR SSH-PRO \033[0;31m
\033[0;31m   [\033[1;36m17\033[0;31m] \033[1;37m• \033[1;37mBLOQUEADOR DE SITES \033[0;31m
\033[0;31m   [\033[1;36m18\033[0;31m] \033[1;37m• \033[1;37mFIREWALL \033[0;31m
\033[0;31m   [\033[1;36m00\033[0;31m] \033[1;37m• \033[1;37mVOLTAR  \033[1;32m<\033[1;33m<\033[1;31m< \033[0m"
echo -e "╚═════════════════════════•⊱✦⊰•═════════════════════════╝" | lolcat
echo -ne "   \033[1;31m➤ \033[1;32mOPÇÃO\033[1;33m\033[1;31m\033[1;37m: "; read x
case "$x" in
   14)
   clear
   autoexec
   ;;
   15)
   clear
   blockt
   ;;
   16)
   clear
   delscript
   ;;
   17)
   clear
   blocksite
   ;;
   18)
   clear
   fr
   ;;
   0|00)
   clear
   menu
   ;;
   *)
   echo -e "\n\033[1;31mOpcao invalida !\033[0m"
   sleep 2
esac
}
menu3 (){
clear
echo -e "\E[44;1;37m              🚀 GERENCIAR USUARIOS 🚀               \E[0m"
echo -e "\033[0;36m╔═══════════════════════•⊱✦⊰•═══════════════════════╗\033[0m"
[[ ! -e /tmp/att ]]  && {
    echo -e "\033[1;31m  \033[1;32mOnlines:\033[1;37m $_onlin    \033[1;31m  \033[1;32mExpirados: \033[1;37m$_userexp \033[1;31m  \033[1;32mTotal: \033[1;37m$_tuser\033[0m     \033[1;31m"
    var01='\033[1;37m•'
} || {
    echo -e ""
    var01="\033[1;32m!"
}
echo -e "\033[0;36m° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° °\033[0m"
echo -e "\033[0;31m   [\033[1;36m01\033[0;31m] \033[1;37m• \033[1;37mCRIAR USUARIO \033[0;31m  
\033[0;31m   [\033[1;36m02\033[0;31m] \033[1;37m• \033[1;37mCRIAR TESTE \033[0;31m 
\033[0;31m   [\033[1;36m03\033[0;31m] \033[1;37m• \033[1;37mREMOVER USUARIO \033[0;31m 
\033[0;31m   [\033[1;36m04\033[0;31m] \033[1;37m• \033[1;37mUSUARIOS ONLINE \033[1;31m  
\033[0;31m   [\033[1;36m05\033[0;31m] \033[1;37m• \033[1;37mMUDAR DATA \033[0;31m 
\033[0;31m   [\033[1;36m06\033[0;31m] \033[1;37m• \033[1;37mALTERAR LIMITE \033[0;31m 
\033[0;31m   [\033[1;36m07\033[0;31m] \033[1;37m• \033[1;37mREMOVER EXPIRADOS \033[0;31m
\033[0;31m   [\033[1;36m00\033[0;31m] \033[1;37m• \033[1;37mVOLTAR  \033[1;32m<\033[1;33m<\033[1;31m< \033[0m"
echo -e "\033[0;36m╚═══════════════════════•⊱✦⊰•═══════════════════════╝\033[0m"
echo -ne "   \033[1;31m➤ \033[1;32mOPÇÃO\033[1;33m\033[1;31m\033[1;37m: "; read x
case "$x" in
   1 | 01)
   clear
   criarusuario
   echo -ne "\n\033[1;31m   ENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   clear
   ;;
   2 | 02)
   clear
   criarteste
   echo -ne "\n\033[1;31m   ENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   clear
   ;;
   3 | 03)
   clear
   remover
   sleep 3
   ;;
   4 | 04)
   clear
   sshmonitor
   echo -ne "\n\033[1;31m   ENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   clear
   ;;      
   5 | 05)
   clear
   mudardata
   sleep 3
   ;;
   6 | 06)
   clear
   alterarlimite
   sleep 3
   ;;
   7 | 07)
   clear
   expcleaner
   echo ""
   sleep 3
   ;;
   0 | 00)
   clear
   menu
   ;;
   *)
   echo -e "\n\033[1;31mOpcao invalida !\033[0m"
   sleep 2
   menu3
   ;;
esac
}
menu4 (){
clear
echo -e "\E[44;1;37m               🚀 GERENCIAR SERVIDOR 🚀                \E[0m"
echo -e "\033[0;36m╔════════════════════════•⊱✦⊰•════════════════════════╗\033[0m"
[[ ! -e /tmp/att ]]  && {
echo -e "\033[0;36m  \033[1;32mSISTEMA           \033[1;31m  \033[1;32mMEMÓRIA RAM      \033[1;31m \033[1;32m PROCESSADOR      \033[1;31m"
echo -e "\033[0;36m  \033[1;36mOS: \033[1;37m$_system    \033[1;31m  \033[1;36mTotal:\033[1;37m$_ram \033[1;31m  \033[1;36mNucleos: \033[1;37m$_core\033[0m   \033[1;31m"
echo -e "\033[0;36m  \033[1;36mHora: \033[1;37m$_hora    \033[1;31m  \033[1;36mEm uso: \033[1;37m$_usor \033[1;31m  \033[1;36mEm uso: \033[1;37m$_usop\033[0m    \033[1;31m"
    var01='\033[1;37m•'
} || {
    echo -e ""
    var01="\033[1;32m!"
}
echo -e "\033[0;36m° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° °\033[0m"
echo -e "\033[0;31m   [\033[1;36m01\033[0;31m] \033[1;37m• \033[1;37mSPEEDTEST \033[0;31m 
\033[0;31m   [\033[1;36m02\033[0;31m] \033[1;37m• \033[1;37mCORRIGIR SPEEDTEST \033[0;31m 
\033[0;31m   [\033[1;36m03\033[0;31m] \033[1;37m• \033[1;37mTRAFEGO DE REDE \033[0;31m 
\033[0;31m   [\033[1;36m04\033[0;31m] \033[1;37m• \033[1;37mREINICIAR SISTEMA \033[0;31m 
\033[0;31m   [\033[1;36m05\033[0;31m] \033[1;37m• \033[1;37mREINICIAR SERVIÇOS \033[1;31m  
\033[0;31m   [\033[1;36m06\033[0;31m] \033[1;37m• \033[1;37mMUDAR SENHA ROOT \033[0;31m 
\033[0;31m   [\033[1;36m00\033[0;31m] \033[1;37m• \033[1;37mVOLTAR  \033[1;32m<\033[1;33m<\033[1;31m< \033[0m"
echo -e "\033[0;36m╚════════════════════════•⊱✦⊰•════════════════════════╝\033[0m"
echo -ne "   \033[1;31m➤ \033[1;32mOPÇÃO\033[1;33m\033[1;31m\033[1;37m: "; read x
case "$x" in
   1 | 01)
   clear
   speedtest -p no
   echo -ne "\n\033[1;31m   ENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   clear
   menu4
   ;;
   2 | 02)
   fun_bar 'fun_fixspeed'
   clear
   menu4
   ;;
   3 | 03)
   clear
   echo -e "\033[1;33mPARA SAIR CLICK CTRL + C\033[1;36m"
   sleep 2s
   apt install slurm -y && slurm -i eth0
   ;;
   4 | 04)
   clear
   reiniciarsistema
   ;;
   5 | 05)
   clear
   reiniciarservicos
   sleep 3
   ;;
   6 | 06)
   clear
   senharoot
   sleep 3
   ;;
   0 | 00)
   clear
   menu
   ;;
   *)
   echo -e "\n\033[1;31mOpcao invalida !\033[0m"
   sleep 2
   menu3
   ;;
esac
}
menu5 (){
clear
echo -e "\E[44;1;37m           ⚡ GERENCIAR CHECKUSER ⚡              \E[0m"
echo -e "\033[0;36m╔══════════════════════•⊱✦⊰•══════════════════════╗\033[0m"
echo -e "\033[0;31m   [\033[1;36m01\033[0;31m] \033[1;37m• \033[1;37mDTUNNEL [UBUNTU 20]\033[0;31m  
\033[0;31m   [\033[1;36m00\033[0;31m] \033[1;37m• \033[1;37mVOLTAR  \033[1;32m<\033[1;33m<\033[1;31m< \033[0m"
echo -e "\033[0;36m╚══════════════════════•⊱✦⊰•══════════════════════╝\033[0m"
echo -ne "   \033[1;31m➤ \033[1;32mOPÇÃO\033[1;33m\033[1;31m\033[1;37m: "; read x
case "$x" in
   1 | 01)
   clear
   bash <(curl -sL https://n9.cl/yo2nc)
   ;;
   0 | 00)
   clear
   menu
   ;;
   *)
   echo -e "\n\033[1;31mOpcao invalida !\033[0m"
   sleep 2
   menu3
   ;;
esac
}
while true $x != "ok"
do
stsl=$(ps x | grep "limiter"|grep -v grep > /dev/null && echo -e "\033[1;32m◉" || echo -e "\033[1;31m◉")
swpp=$(ps x | grep "swap"|grep -v grep > /dev/null && echo -e "\033[1;32m◉" || echo -e "\033[1;31m◉")
stson=$(ps x | grep "onlineapp"|grep -v grep > /dev/null && echo -e "\033[1;32m◉" || echo -e "\033[1;31m◉")
stsu=$(ps x | grep "udpvpn"|grep -v grep > /dev/null && echo -e "\033[1;32m◉" || echo -e "\033[1;31m◉")
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/SSHPlus/Exp)" != "" ]] && _expuser=$(cat /etc/SSHPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-5s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-5s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-10s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(printf '%-5s' "$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)")
swap1=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $2'})")
swap2=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $4'})")
swap3=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $3'})")
clear
figlet "         SSH-PRO" | lolcat
echo -e "\033[1;33m  VERSÃO: \033[1;37m2.0.7"
echo -e "╔═══════════════════════════•⊱✦⊰•═══════════════════════════╗"  | lolcat
echo -e "\033[0;36m  \033[1;32mSISTEMA           \033[1;31m  \033[1;32mMEMÓRIA RAM      \033[1;31m \033[1;32m PROCESSADOR      \033[1;31m"
echo -e "\033[0;36m  \033[1;36mOS: \033[1;37m$_system    \033[1;31m  \033[1;36mTotal:\033[1;37m$_ram \033[1;31m  \033[1;36mNucleos: \033[1;37m$_core\033[0m   \033[1;31m"
echo -e "\033[0;36m  \033[1;36mHora: \033[1;37m$_hora    \033[1;31m  \033[1;36mEm uso: \033[1;37m$_usor \033[1;31m  \033[1;36mEm uso: \033[1;37m$_usop\033[0m    \033[1;31m"
echo -e "\033[0;36m  \033[1;32mOnlines:\033[1;37m $_onlin    \033[1;31m  \033[1;32mExpirados: \033[1;37m$_userexp \033[1;31m  \033[1;32mTotal: \033[1;37m$_tuser     \033[1;31m"
echo -e "\033[0;36m° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° °\033[0m"
echo -e "\033[0;36m\033[0;31m [\033[1;36m01\033[0;31m] \033[1;37m• \033[1;37mGERENCIAR USUARIO \033[0;31m        [\033[1;36m08\033[0;31m] \033[1;37m• \033[1;37mGERENCIAR SERVIDOR  \033[1;31m      
\033[0;31m [\033[1;36m02\033[0;31m] \033[1;37m• \033[1;37mOTIMIZAR \033[0;31m                 [\033[1;36m09\033[0;31m] \033[1;37m• \033[1;37mBADVPN $stsu \033[1;31m          
\033[0;31m [\033[1;36m03\033[0;31m] \033[1;37m• \033[1;37mATUALIZAR \033[0;31m                [\033[1;36m10\033[0;31m] \033[1;37m• \033[1;37mBACKUP \033[1;31m        
\033[0;31m [\033[1;36m04\033[0;31m] \033[1;37m• \033[1;37mCHECKUSER \033[0;31m                [\033[1;36m11\033[0;31m] \033[1;37m• \033[1;37mLIMITER $stsl  \033[1;31m       
\033[0;31m [\033[1;36m05\033[0;31m] \033[1;37m• \033[1;37mBOT TELEGRAM \033[0;31m             [\033[1;36m12\033[0;31m] \033[1;37m• \033[1;37mINFO VPS  \033[1;31m         
\033[0;31m [\033[1;36m06\033[0;31m] \033[1;37m• \033[1;37mMEMORIA SWAPP \033[0;31m            [\033[1;36m13\033[0;31m] \033[1;37m• \033[1;37mFERRAMENTAS\033[1;31m 
\033[0;31m [\033[1;36m07\033[0;31m] \033[1;37m• \033[1;37mMODO DE CONEXAO   \033[0;31m        [\033[1;36m00\033[0;31m] \033[1;37m• \033[1;37mSAIR  \033[1;31m"
echo -e "╚═══════════════════════════•⊱✦⊰•═══════════════════════════╝" | lolcat
echo -ne "   \033[1;31m➤ \033[1;32mOPÇÃO\033[1;33m\033[1;31m\033[1;37m: "; read x
case "$x" in 
   1 | 01)
   menu3
   ;;
   2 | 02)
   clear
   otimizar
   echo -ne "\n\033[1;31m   ENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   clear
   ;;
   3 | 03)
   clear
   echo ""
   fun_bar 'fun_atualizar'
   clear
   attscript
   ;;
   4 | 04)
   menu5
   ;;      
   5 | 05)
   clear
   botssh
   ;;
   6 | 06)
   clear
   swapmemory
   ;;
   7 | 07)
   clear
   conexao
   ;;
   8 | 08)
   menu4
   ;;
   9 | 09)
   clear
   menub
   ;;
   10 | 10)
   userbackup
   echo -ne "\n\033[1;31m   ENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   clear
   ;;
   11 | 11)
   clear
   limit_ssh
   ;;
   12 | 12)
   clear
   detalhes
   echo -ne "\n\033[1;31m   ENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   clear
   ;;
   13 | 13)
   menu2
   ;;
   0 | 00)
   echo -e "\033[1;31m SAINDO DO MENU...\033[0m"
   sleep 2s
   clear
   exit;
   ;;
   *)
   echo -e "\n\033[1;31mOpcao invalida !\033[0m"
   sleep 2
esac
done
}
menu
#fim
